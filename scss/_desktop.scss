//For the desktop layout, break point is at 875px
//Body 
body {
    @include content-wraper($width-desktop);
    background-color: $color-neu-white;
    font-family: $font-kumbh-sans, $font-fallback; 
    //Responsive typography
    font-size: calc($font-size + 0.1vw);
    //Basically, if the content is not enough, then it will try and span to 100vh, if more, it will not hold back to grow
    min-height: 100vh; 

    > * {
        margin: 0 auto;
        width: 85%;
    }
}
//Potential break point 875px
//Based on the nav, profile and cart closing in on the links. 875px is a good break poing I think

//Header area
nav {
    @include flex($align: center);
    gap: 30px;  

    $nav-padding: 15px;
    padding: $nav-padding 0;
    border-bottom: 1px solid $color-neu-grayish-blue;

    //The mobile button
    #mb-btn, #mb-close-btn {
        display: none;
    }

    //The links
    ul {
        @include flex();
        gap: 25px;
    }

    a {
        color: $color-neu-dark-grayish-blue;

    }

    li:hover{
        position: relative;
    }

    //Links border when hover
    li:hover::before{
        content: '';
        position: absolute;
        //right on the fucking border precisely
        bottom: calc(($font-size + 0.1vw + $nav-padding)*-1);
        width: 100%;
        height: 0;
        border-bottom: 3px solid $color-pri-orange;
    }

    //cart and profile container
    .cart-profile {
        margin-left: auto;
        @include flex($align: center);
        gap: 30px;

        #cart-content-btn{
            cursor: pointer;
            position: relative;
            transition: 100ms ease-in-out;
            transform: scale(1);
        }

        #cart-content-btn:active{
            transform: scale(1.1);
        }

        #cart-notification {
            position: absolute;
            top: -50%;
            right: -40%;
            width: calc((1rem * 0.75) + 7px);
            height: calc((1rem * 0.75) + 5px);
            text-align: center;
            font-size: 1rem * 0.75;
            color: $color-neu-white;
            background-color: $color-pri-orange;
            border-radius: 8px;

            opacity: 1;
            transition: 100ms ease-in-out;
        }

        #cart-notification.active{
            top: -40%;
            opacity: 0;
        }

        #cart-notification.empty {
            opacity: 0;
        }

        //For cart-content to have a place to anchor to.
        position: relative;
        .cart-content {
            position: absolute;
            top: 80px;
            right: -50px;
            width: 350px;
            box-shadow: 0 7px 10px 1px rgba(0, 0 ,0 , .2);
            background-color: $color-neu-white;

            @include flex($direction: column);

            .cart-header {
                border-bottom: 1px solid $color-neu-grayish-blue;
                font-weight: $font-weight-2;
                padding: 15px 30px;
            }

            .cart-list {
                @include flex($direction: column, $align: center);
                gap: 30px;
                padding: 20px 15px;
                color: $color-neu-dark-grayish-blue;
                max-height: 400px;
                
                .items {
                    overflow-y: auto;
                }

                .items.empty::after{
                    content: 'Your cart is empty.';
                }

                //Individual list item
                .item {
                    @include flex($align: center);
                    gap: 10px;
                    padding: 0 5px;
                    border: 1px solid $color-neu-light-grayish-blue;
                    border-radius: 7px;

                    #item-total-price{
                        color: $color-neu-black;
                        font-weight: $font-weight-2;
                    }

                    i#remove-item {
                        transition: 100ms ease-in-out;
                        transform: scale(1);
                    }
                    i#remove-item:active {
                        transform: scale(1.1);
                    }
                }

                .item:hover{
                    opacity: 0.8;
                    border: 1px solid $color-pri-orange;
                }

                img{
                    border-radius: 5px;
                    width: 50px;
                    height: 50px;
                }

                //The checkout button
                button {
                    margin-top: auto;
                    @extend %reset-margin-padding;
                    background-color: $color-pri-orange;
                    border: none;
                    color: $color-neu-white;
                    border-radius: 10px;
                    padding: 15px;
                    width: 100%;

                    transition: 100ms ease-in-out;
                    transform: scale(1);
                }

                button:hover {
                    background-color: lighten($color-pri-orange, 15%);
                }

                button:active {
                    color: $color-neu-black;
                    transform: scale(1.1);
                }

                button.empty {
                    display: none;
                }
            }

            z-index: -1;
            opacity: 0;
            transition: 200ms ease-in-out;
        }

        //The only instance that fixed height is correct
        .cart-list.empty {
            height: 125px;
        }

        .cart-content.active {
            top: 60px;
            z-index: 0;
            opacity: 1;
        }

        .profile {
            width: 50px;
            height: 50px;
        }

        .profile:hover {
            border-radius: 30px;
            border: 2px solid $color-pri-orange;
        }
    }
}

//Main area
main {
    @include grid($column: 1fr 1fr);
    padding: 50px 0;

    .product-img {
        grid-column: 1/2;
    }

    .product-detail {
        grid-column: 2/3;
    }
}

//Product image 
.product-img {
    @include flex($direction: column, $align: center, $justify:center);
    gap: 30px;

    $img-border-radius: 20px;
    img {
        height: 100%;
        width: 100%;

        cursor: pointer;
    }

    > * {
        width: 87%;
        //Ensuring the images not exceeding 700px, But...Is this line necessary ?
        max-width: 700px; 
    }

    &-detail{
        
        @at-root {
            //Apply to the body
            .lock-body {
                //Test this line here
                height: 100vh;
                overflow-y: hidden; 
            }

            .mb-dark-overlay::after {
                content: '';
                position: fixed;
                inset: 0;
                width: 100%;
                height: 100%;
                background-color: rgba($color-neu-black, 0.7);
                z-index: 1;
            }

            .body-dark-overlay {
                position: fixed;
                height: 100%;
                width: 100%;
                opacity: 0;
                transform: scale(0);
                transform-origin: top;
                background-color: rgba($color-neu-black, 0.7);
                z-index: -2;
                transition: 200ms ease-in-out;

                @include flex($align: center, $justify: center);

                #active-box {
                    @include flex($direction: column, $align: center);
                    width: clamp(300px, 70%, 600px);

                    //For the close button to anchor to.
                    position: absolute;

                    .product-img-detail{
                        img {
                            cursor: default;
                        }
                    }

                    button[data-button-next], button[data-button-prev] {
                        display: block;
                    }

                    button[data-button-next]:hover, button[data-button-prev]:hover {
                        color: $color-pri-orange;
                    }
                }

                #close-btn {
                    position: absolute;
                    top: 0;
                    right: -7%;
                    width: 30px;
                    height: 30px;
                    cursor: pointer;
                    color: $color-neu-white;
                }

                #close-btn:hover {
                    color: $color-pri-orange;
                }


            }

            .body-dark-overlay[data-active] {
                transform: scale(1);
                opacity: 1;
                z-index: 1;

                #close-btn{
                    z-index: 2;
                }
            }
            
       }

        ul {
            @extend %reset-margin-padding;

            img {
                border-radius: $img-border-radius;
            }
        }

        ul {
            width: 100%;
            @include flex();
            gap: 20px;
            overflow-x: auto;
            //Slight movement is possible for the y
            //So we shut the damn thing up.
            overflow-y: hidden;
            //This is to curve the overscrolling to
            //go out the container inside. Read it here
            //https://css-tricks.com/almanac/properties/o/overscroll-behavior/
            overscroll-behavior-inline: contain;
            //Snap to the item
            scroll-snap-type: x mandatory;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;

            > * {
                //Necessary to go with scroll-snap-type
                //Insert it with each item 
                scroll-snap-align: start;
                flex-shrink: 0;
                flex-basis: 100%;
            }

        }

        /* Hide scrollbar for Chrome, Safari and Opera */
        //This is a fucking hack
        ul::-webkit-scrollbar {
            display: none;
        }

        /* Hide scrollbar for IE, Edge and Firefox */
        ul {
          -ms-overflow-style: none;  /* IE and Edge */
          scrollbar-width: none;  /* Firefox */
        }

        position: relative;
        button[data-button-next], button[data-button-prev] {
            @extend %reset-margin-padding;
            //Since this is only for the active box.
            display: none;
            position: absolute;
            top: 50%;
            opacity: 1;

            border-radius: 30px;
            border: none;
            background-color: $color-neu-white;
            box-shadow: 1px 2px 2px 1px rgba($color-neu-black, 0.2);
            width: 45px;
            height: 45px;
            font-size: $font-size * 1.3;
            font-weight: $font-weight-2;
            cursor: pointer;
        }
        button[data-button-next]:hover, button[data-button-prev]:hover {
            color: $color-pri-orange;
        }
        
        button[data-button-next] {
            right: -3%;
        }
        button[data-button-prev] {
            left: -3%;
        }

    }

    &-variation{

        ul {
            @extend %reset-margin-padding;
            @include grid($column: repeat(4, 1fr));
            gap: 15px;

            img {
                width: 100%;
                height: 100%;
                border-radius: $img-border-radius / 2;
            }
        }

        li, li[data-active-overlay]::before{
            border-radius: $img-border-radius / 2;
        }

        li:hover {
            opacity: 0.7;
        }

        li[data-active-overlay] {
            position: relative;
            border: 1.5px solid $color-pri-orange;
        }

        li[data-active-overlay]::before{
            content: '';
            position: absolute;
            inset: 0;
            width: 100%;
            height: 100%;
            background-color: $color-neu-white;
            opacity: 0.7;
        }
    }
}

//product detail
.product-detail {
    @include flex($direction: column, $justify: center);
    gap: 10px;
    //Man this is trippy as hell repsonsive padding is a bitch
    padding: clamp(10px + 1vw, 2vw ,50px);
    

    &-maker{
        color: $color-pri-orange;
        margin-bottom: 15px;
    }

    &-tittle{
        color: $color-neu-black;
        //These probably work I think
        max-width: 65%;
        min-width: 300px;
        //First time doing this shit, Now, to do this right, scale the font first then
        //the padding latter, or work inside out of the box model.
        font-size: clamp(2.1rem, calc($font-size + 2vw), 2.5rem);
        font-weight: $font-weight-2;
    }

    &-description{
        line-height: calc(1em + 0.5vw);
        color: $color-neu-dark-grayish-blue;
    }

    &-price{
        width: 35%;
        @include grid($column: repeat(2,1fr),$row: repeat(2,1fr));
        @include defineGridArea((
            ".current-price": cp,
            ".discount": dc,
            ".previous-price": pp
        ));
        grid-template-areas: 
            "cp dc"
            "pp pp"
        ;
        align-items: center;
        column-gap: 30px;
        row-gap: 10px;

        .current-price {
            font-size: $font-size * 1.5;
            font-weight: $font-weight-2;
        }
        
        .discount {
            text-align: center;
            border-radius: 5px;
            background-color: $color-pri-pale-orange;
            color: $color-pri-orange;
            padding: 5px 10px;
        }

        .previous-price {
            color: $color-neu-grayish-blue;
            text-decoration: line-through;
        }

    }

    //Notice for more than 10 pairs
    h5 {
        color: $color-neu-dark-grayish-blue;
        font-weight: $font-weight-1;
    }
}

//The add to cart and quantity buttons
.product-detail-sale{
    @include flex();
    gap: 10px;

    //The quantity element
    //Here's the tutorial for it:
    //https://www.youtube.com/watch?v=n1O83fJYYLo
    &-qtty {
        flex: 1;

        @include grid($column: 1fr 1fr 1fr);
        background-color: $color-neu-light-grayish-blue;
        padding: 10px 15px;
        border-radius: 15px;

        //Since this is a hack, bascially, 2 button with js funtion to 
        //increase or decrease the input number, the input field
        //itself is readonly. Thus achieving the look.
        //Source:
        //https://www.w3schools.com/howto/howto_css_hide_arrow_number.asp
        // Chrome, Safari, Edge, Opera 
        input::-webkit-outer-spin-button,
        input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
        }
    
        /* Firefox */
        input[type=number] {
        -moz-appearance: textfield;
        }

        input[type="number"]{
            @extend %reset-margin-padding;
            font-weight: $font-weight-2;
            color: $color-neu-black;
            text-align: center;
            border: none; 

            max-width: 70px;
            background-color: transparent;
        }

        button {
            width: 35px;
            height: 35px;
            border-radius: 30px;
            font-size: $font-size * 1.5;
            font-weight: $font-weight-2;
            color: $color-pri-orange;
            border: none;
            background-color: transparent;
            cursor: pointer;
            transform: scale(1);
            transition: 200ms;
        }

        button:hover {
            background-color: darken($color-pri-pale-orange, 2%);
        }

        button:focus {
            border: 1px dashed $color-neu-dark-grayish-blue;
            background-color: darken($color-neu-light-grayish-blue, 3%);
        }

        button:active {
            background-color: $color-pri-orange; 
            color: $color-neu-black;
            transform: scale(1.05);
            transition: 200ms;
        }

   }

    &-addtocart{
        flex: 3;

        button {
            @extend %reset-margin-padding;
            background-color: $color-pri-orange;
            border: none;
            color: $color-neu-white;
            border-radius: 10px;
            padding: 15px;
            width: 100%;

            i {
                margin-right: 10px;
            }
            transform: scale(1);
            transition: 100ms ease-in-out;
        }

        button:hover {
            background-color: lighten($color-pri-orange, 15%);
        }

        button:focus {
            border: 1px dashed $color-neu-light-grayish-blue;
        }

        button:active{
            transform: scale(1.05);
            color: $color-neu-black;
        }
    }
}